/* Это шаблон палатки для крыши автомобиля. Фактически, роль палатки выполняют изолированные сиденья. По-умолчанию, предалагается изолировать средние сиденья. Для установке в автомобиль палатки, в скрипт необходимо вписать строку:
	template = ATARoofTent/part/ATARoofTent,
Спавн палатки (предмет ATARoofTentItem) уже настроен в моде. Однако, вы можете создать свой предмет и переопределить его в шаблоне, тогда спавн необходимо будет настраивать самостоятельно.
Для отключения части функций в радиальном меню автомобиля, при нахождении игрока в палатке, служат шаблоны "InRoofTent + *название сиденья*".
Для импортирования готового шаблона палатки, в котором изолированы средние сиденья и отключены лишние функции радиального меню, необходимо использовать строку:
	template! = ATARoofMiddleTent,
Внимание! Строка должна быть добавлена после стандартного "ванильного" шаблона с пассажирами и шаблонов с сиденьями.

Палатка предполагает три типа 3д-моделей: "Default" - общая рама, "Open" - открытая палатка, "Close" - закрытая палатка. Модель "Default" - не обязательна.
Зд-модели должны быть переопределены в скрипте вашего автомобиля. Так же в ходе этого процесса, вам следуем самостоятельно указать части автомобиля, обязательные для установки/снятия палатки. Пример переопределения:
	part ATARoofTent
	{
		model Default
		{
			file = ATA_Jeep_palatka_base,
		}
		model Open
		{
			file = ATA_Jeep_palatka_open,
		}
		model Close
		{
			file = ATA_Jeep_palatka_closed,
		}
		table install
		{
			requireInstalled = ATARoofBase,
			requireUninstalled = ATARoofRackFirst,
		}
	}
*/

module Base
{
	item ATARoofTentItem
	{
		Weight	=	10.0,
        Type	=	Normal,
        DisplayName	= ATARoofTentItem,
        Icon	=	ATARoofTentItem,
        ChanceToSpawnDamaged = 25,
		MaxCapacity = 30,
        ConditionMax = 100,
        MechanicsItem = TRUE,
		Tooltip = Tooltip_item_tuning,
	}
	
	template vehicle ATARoofTent
	{
		part ATARoofTent
		{
			area = TruckBed,
			category = tuning,
			itemType = Base.ATARoofTentItem,
			specificItem = false,
			mechanicRequireKey = false,
			repairMechanic = false,
			model Default
			{
				file = Vehicles_Wheel,
			}
			table install
			{
				items
				{
					1
					{
						type = Base.LugWrench,
						count = 1,
						keep = true,
						equip = primary,
					}
				}
				time = 400,
				test = Tuning.InstallTest.multiRequire,
				complete = Tuning.InstallComplete.RoofTent,
			}
			table uninstall
			{
				items
				{
					1
					{
						type = Base.LugWrench,
						count = 1,
						keep = true,
						equip = primary,
					}
				}
				time = 400,
				test = Tuning.UninstallTest.multiRequire,
				complete = Tuning.UninstallComplete.RoofTent,
			}
			lua
			{
				create = Tuning.Create.RoofTent,
				init = Tuning.Init.RoofTent,
			}
		}
		
		part InRoofTentFrontLeft
		{
			area = SeatFrontLeft,
		}
		part InRoofTentFrontRight
		{
			area = SeatFrontRight,
		}
		part InRoofTentMiddleLeft
		{
			area = SeatMiddleLeft,
		}
		part InRoofTentMiddleRight
		{
			area = SeatMiddleRight,
		}
		part InRoofTentRearLeft
		{
			area = SeatRearLeft,
		}
		part InRoofTentRearRight
		{
			area = SeatRearRight,
		}
		part InRoofTent*
		{
			category = nodisplay,
		}
	}
	
	template vehicle ATARoofMiddleTentSetting
	{
		template = ATARoofTent/part/InRoofTentMiddleLeft,
		template = ATARoofTent/part/InRoofTentMiddleRight,
		template = Mattresses/part/MattressMiddleLeft,
		template = Mattresses/part/MattressMiddleRight,
		passenger FrontLeft
		{
			switchSeat MiddleLeft
			{
			}

			switchSeat MiddleRight
			{
			}
		}

		passenger FrontRight
		{
			switchSeat MiddleLeft
			{
			}

			switchSeat MiddleRight
			{
			}
		}

		passenger MiddleLeft
		{
			switchSeat FrontLeft
			{
			}

			switchSeat FrontRight
			{
			}

			switchSeat RearLeft
			{
			}

			switchSeat RearRight
			{
			}
		}

		passenger MiddleRight
		{
			switchSeat FrontLeft
			{
			}

			switchSeat FrontRight
			{
			}

			switchSeat RearLeft
			{
			}

			switchSeat RearRight
			{
			}
		}
	
		passenger RearLeft
		{
			switchSeat MiddleLeft
			{
			}

			switchSeat MiddleRight
			{
			}
		}

		passenger RearRight
		{
			switchSeat MiddleLeft
			{
			}

			switchSeat MiddleRight
			{
			}
		}
		template = Seat/part/SeatMiddleLeft,
		template = Seat/part/SeatMiddleRight,
		part SeatMiddle*
		{
			category = nodisplay,
			lua
			{
				create = Tuning.Create.NotInstallDefault,
			}
		}
	}
}